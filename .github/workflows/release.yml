name: Release Build

on:
  push:
    tags:
      - 'v*'

permissions:
    contents: write
    packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goarch: arm64
            goos: windows
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup additional files
      run: |
        mkdir -p release_files/data
        touch release_files/data/accounts.txt
        touch release_files/data/proxies.txt
        
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Generate Release Notes
      id: release_notes
      run: |
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 ${{ env.VERSION }}^ || git rev-list --max-parents=0 HEAD)
        CHANGELOG=$(git log ${PREVIOUS_TAG}..${{ env.VERSION }} --pretty=format:"* %s%n")
        echo "CHANGELOG<<EOF" >> $GITHUB_ENV
        echo "$CHANGELOG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "1.23.2"
        binary_name: "megafin-farmer"
        extra_files: release_files/data/*
        asset_name: "megafin-farmer-${{ matrix.goos }}-${{ matrix.goarch }}"
        compress_assets: zip
        build_flags: "-v"
        ldflags: "-s -w"
        md5sum: false
        project_path: "."
        release_tag: ${{ github.ref_name }}
        release_name: "Release ${{ github.ref_name }}"
        pre_command: |
          mkdir -p data
          touch data/accounts.txt data/proxies.txt
        release_body: |
          Release ${{ github.ref_name }}

          Changes in this release:
            ${{ env.CHANGELOG }}
            
          Available builds:
            
          1. Linux AMD64 (for most Linux distributions):
             - OS: Linux
             - Architecture: 64-bit (x86_64)
            
          2. Windows AMD64 (for Windows 7/8/10/11):
             - OS: Windows
             - Architecture: 64-bit (x86_64)
            
          3. macOS AMD64 (for Intel Macs):
             - OS: macOS
             - Architecture: 64-bit Intel
            
          4. macOS ARM64 (for M1/M2 Macs):
             - OS: macOS
             - Architecture: 64-bit ARM (Apple Silicon)
            
          Each archive contains:
          - megafin-farmer executable
          - data/accounts.txt file (add your accounts here)
          - data/proxies.txt file (add your proxies here)
            
          Thank you separately - https://github.com/nazavod777/megafin_farmer_v2
